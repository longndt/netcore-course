// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Server.Data;

#nullable disable

namespace api.Server.Migrations
{
    [DbContext(typeof(apiServerContext))]
    partial class apiServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Server.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("BookCover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BookPrice")
                        .HasColumnType("float");

                    b.Property<int>("BookQuantity")
                        .HasColumnType("int");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookCover = "https://m.media-amazon.com/images/I/61svWgrmT0L._AC_UF1000,1000_QL80_.jpg",
                            BookPrice = 25.0,
                            BookQuantity = 10,
                            BookTitle = "The Full Stack Developer"
                        },
                        new
                        {
                            BookId = 2,
                            BookCover = "https://m.media-amazon.com/images/I/81iua0Wh34L._AC_UF1000,1000_QL80_.jpg",
                            BookPrice = 35.0,
                            BookQuantity = 20,
                            BookTitle = "ASP.NET Core Application Development"
                        },
                        new
                        {
                            BookId = 3,
                            BookCover = "https://media.springernature.com/full/springer-static/cover-hires/book/978-1-4842-3781-6",
                            BookPrice = 45.0,
                            BookQuantity = 30,
                            BookTitle = "Getting to know Vue.js"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
